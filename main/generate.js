const kuromoji = require('kuromoji');
const fs = require('fs');
const isIncludes = (arr, target) => arr.some(el => target.includes(el));
const templates = JSON.parse(fs.readFileSync(`${__dirname}/../template.db`));


const symbol = ['/', '\\', ',', '.', '„ÄÅ', '„ÄÇ', 'Ôºü', 'ÔºÅ', '?', '!', '<', '>', 'Ôºú', 'Ôºû', '_', 'Ôºø', 'Ôºà', 'Ôºâ', '(', ')', '-', '„Äå', '„Äç'];

module.exports = {
  /** 
   * @return {Promise<kuromoji.IpadicFeatures[]>}
   */
  async tokenize(text) {
    let result = new Promise((resolve) => {
      kuromoji.builder({
        dicPath: `${__dirname}/../node_modules/kuromoji/dict`
      }).build((err, tokenizer) => {

        resolve(tokenizer.tokenize(text));
      });
    });
    return result;
  },

  getData(pos = 'ÂêçË©û') {
    /** @type {{text: string, pos: string}[]} */
    let dict = (JSON.parse(fs.readFileSync(`${__dirname}/../dictionary.db`))).dict;
    let result = [];
  
    dict.forEach((word) => {
      if (word.pos !== pos) return;
  
      result[result.length] = word;
    });
  
    return result;
  },


  async connect(word, template) {
    function getData(pos = 'ÂêçË©û') {
      /** @type {{text: string, pos: string}[]} */
      let dict = (JSON.parse(fs.readFileSync(`${__dirname}/../dictionary.db`))).dict;
      let result = [];
    
      dict.forEach((word) => {
        if (word.pos !== pos) return;
    
        result[result.length] = word;
      });
    
      return result;
    }
    
    let particle_before_verb = [];
    let normal_particles = [];
    
    if (!template) {
      let useTemplateId = Math.floor(Math.random() * ((templates.template.length - 1) - 1)) + 1;
      template = templates.template[useTemplateId];
      if (template.length > 10) {
        template = `
        123456ü§î
        ‚Äª„Éú„ÉÉ„Éà„ÅÆ„ÉÜ„Çπ„Éà„Åß„Åô
        `;
      }
      
      word = [];
  
      
      template.forEach((part, i) => {
        if(part === 'Âä©Ë©û' && template[i + 1] === 'ÂãïË©û') {
          word[word.length] = {
            pos: part,
            word: getData(part)[Math.floor(Math.random() * ((getData(part).length - 1) - 0) + 0)].text,
            detail: 'particle_before_verb'
          }
        } else if(part === 'Âä©Ë©û' && template[i + 1] === 'ÂêçË©û') {
          word[word.length] = {
            pos: part,
            word: getData(part)[Math.floor(Math.random() * ((getData(part).length - 1) - 0) + 0)].text,
            detail: 'normal_particle'
          }
        } else if(part === 'Âä©ÂãïË©û') {
          word[word.length] = {
            pos: part,
            word: getData(part)[Math.floor(Math.random() * ((getData(part).length - 1) - 0) + 0)].text,
            detail: part
          }
        } else if(part === 'ÂãïË©û') {
          word[word.length] = {
            pos: part,
            word: getData(part)[Math.floor(Math.random() * ((getData(part).length - 1) - 0) + 0)].text,
            detail: part
          }
        } else {
          word[word.length] = {
            pos: part,
            word: getData(part)[Math.floor(Math.random() * ((getData(part).length - 1) - 0) + 0)].text,
            detail: part
          }
        }

        if(isIncludes(symbol, word[word.length - 1].word)) {
          word[word.length - 1].word === 'Sorakime';
        }
      });
    }

    function setValue(pos, value) {
      if(pos === 'particle_before_verb') {
        particle_before_verb.forEach((pos, i) => {
          pos = value;
        });
      } else {
        normal_particles
      }
    }

    
    word.forEach((wordData, i) => {
      try {
        console.log('test2 > ', word[i]);
        if (word[i].word === '„Å¶' && word[i].detail === 'particle_before_verb') word[i].word = '„Åå';
        if (word[i - 2].word === '„Å¶' && word[i].word === '„Å´' && word[i].detail === 'particle_before_verb') word[i].word = '„ÅØ'; 
        if (word[wordData.i - 2].word === '„Å¶' && wordData.word === '„Åã„Çâ' && wordData.detail === 'particle_before_verb' && word[i - 2].detail === 'normal_particle') word[wordData.i - 2].word === '„Åå';
  
        if (word[i].word === '„ÅÆ' && word[i - 2] === '„ÅÆ' && word[i - 2].detail === 'normal_particle') word[i - 2].word = '„Çí';
        if (wordData.word === '„Åã' && wordData.detail === 'particle_before_verb') wordData.word = '„Åå';
        if (word[wordData.i - 2] === '„Åå' && word[wordData.i - 2].detail === 'normal_particle' && wordData.detail === 'particle_before_verb') {
          word[wordData.i - 2] = '„ÅØ';
          wordData.word = '„Åß';
        }

        if (word[i].word[wordData.word.length - 1] === '„Åó' && wordData.detail === 'ÂãïË©û' && word[i + 1].word[0] === '„Å†' && word[i + 1].detail === 'Âä©ÂãïË©û') word[i + 1].word = '„Åü„Çì„Å†„Å£„Åë„Åã';
        if(isIncludes(symbol, wordData.word) && wordData.detail === 'ÂêçË©û') wordData.word === 'CPU';
        if (word[i].word[wordData.word.length - 1] === '„Å£' && wordData.detail === 'ÂãïË©û' && word[i + 1].word[0] === '„ÅÜ' && word[i + 1].detail === 'Âä©ÂãïË©û') word[i + 1].word = '„Å¶„Å≠';
        if (word[i].word === '„Å¶„Çã' && word[i].pos === 'ÂãïË©û') word[i].word = '‰ºº„Å¶„Çã';
        if (word[i].word === '„Åæ„Åó' && word[i].pos === 'Âä©ÂãïË©û') word[i].word = '„Åó';
        if (word[i].word[wordData.word.length - 1] === '„ÅÜ' && wordData.detail === 'ÂãïË©û' && word[i + 1].word[0] === '„Åü' && word[i + 1].detail === 'Âä©ÂãïË©û') word[i + 1].word = '„Åã';
        if (word[i].word[wordData.word.length - 1] === '„ÅÜ' && wordData.detail === 'ÂãïË©û' && word[i + 1].word[0] === '„Å†' && word[i + 1].detail === 'Âä©ÂãïË©û') wordData.word = '„ÅÇ„Å£';
        if (wordData.word[0] === '„Å†' && wordData.detail === 'Âä©ÂãïË©û' && word[i - 1].word[word[i - 1].length - 1] === '„Å£' && word[i - 1].detail === 'ÂãïË©û') wordData.word = '„Åü';
        if (wordData.word === '„ÅÜ' && wordData.detail === 'Âä©ÂãïË©û' && word[i - 1].word[word[i - 1].length - 1] === '„Åç' && word[i - 1].detail === 'ÂãïË©û') wordData.word = '„ÅÑ„Åü„Çè';
        // if (word[4][word[4].length - 1] === '„Çà' && word[5][0] === '„Åü') word[5] = '„Åã';
        // if (wordData.word !== '„Å†' && wordData.detail === 'ÂãïË©û' && word[5] === '„Åó„Å™') wordData.word = '„Å†';
        // if (word[4][word[4].length - 1] !== '„Çã' && word[5][0] === '„Åü') word[5][0] = '„Åã';
        // if (word[4][word[4].length - 1] === '„Çà' && word[5][0] === '„Åæ') word[5][0] = '„Åß';
      } catch (e) {
        
      }
    });
       


    
    
    

    // if (word[4][word[4].length - 1] === '„Çè' && word[5][0] === '„Åü') word[5] = '„Çå„Åü';

    // if (word[4][word[4].length - 1] === 'ÂØù' && word[5] === '„ÅÜ') word[5] = '„Çã';
    // if (word[4][word[4].length - 1] === '„Çà' && word[5][0] === '„Åü') word[5] = '„ÅÜ';
    // if (word[4].includes('„Å£„Åü') && word[5][0] === '„ÅÑ') word[5][0] = '';
    // if (word[4][word[4].length - 1] === '„Çè' && word[5][0] === '„ÅØ') word[5] = '';
    // if (word[4][word[4].length - 1] === '„Çâ' && word[5][0] === '„ÅÜ') word[5] = '„Åô';
    // if (word[4].includes('„Åü') && word[5][0] === '„Çâ') word[5][0] = '';
    // if (word[4][word[4].length - 1] !== '„Åæ' && word[5][0] === '„ÅÜ') word[5][0] = '„Åü';
    // if (word[4][word[4].length - 1] === '„ÅÜ' && word[5][0] !== '„Åû') word[5] = '';
    // if (word[4][word[4].length - 1] === '„Å£' && word[5][0] === '„Å†') word[5] = '„Åü';
    // if (word[4][word[4].length - 1] === '„Å£' && word[5][0] === '„Å™') word[5] = '„Åü„Å™';
    // if (word[4][word[4].length - 1] === '„Å£' && word[5][0] === '„ÅÜ') word[5] = '„Åü';
    // if (word[5][word[5].length - 1] === '„Å£') word[5] = word[5] + '„Åü';
    // if (word[1][word[1].length - 1] === '„Å´' && word[3][word[1].length - 1] === '„Å´') word[3] = '„Åå';
    // if (word[4][word[4].length - 1] === '„Çã' && word[5][0] === '„Åü') word[5] = '„Çì';
    // if (word[1] === word[3]) word[3] = '„Åß';
    // if (word[4][word[4].length - 1] === '„ÅÜ' && word[5][0] === '„Åü') word[4][word[4].length - 1] = '„Å£';
    // if (word[1][word[1].length - 1] === '„Å¶' && word[3][0] === '„Çí') word[3] = '„Åß';
    // if (word[4][word[4].length - 1] === '„Å£' && word[5][0] === '„Åæ') word[5] = '„Åü„Çè';
    // if (word[5][word[5].length - 1] === '„Åó') word[5] = '„Åó„Åü';
    // if (word[4][word[4].length - 1] === 'ÂØù' && word[5][0] === '„Å†') word[5] = '„Åü';
    // if (word[1][word[1].length - 1] === '„Çí' && word[3][0] === '„ÅÆ') {
    //   word[1] = '„ÅÆ';
    //   word[3] = '„Åå';
    // }
    // if (word[4][word[4].length - 1] === '„Çâ' && word[5][0] === '„Å†') word[5] = '„Åõ„Åü';
    // if (word[3][word[3].length - 1] === '„ÅÆ') word[5] = '„Åå';
    // if (word[4][word[4].length - 1] === '„ÅÑ' && word[5][0] === '„Å†') word[5] = '„Åü';
    // if (word[4][word[4].length - 1] === '„Çã' && word[5][0] !== '„Å™') word[5] = '';
    // if (word[3][word[3].length - 1] === '„Åå' && word[4][0] === '„Å¶') word[4][0] = '„ÅÑ';
    // if (word[4][word[4].length - 1] === 'ÂØù' && word[5][0] === '„Åó') word[5] = '„Åü';
    // if (isIncludes(symbol, word[0])) word[0] = '„Çè„Çä„ÇÖ';
    // if (isIncludes(symbol, word[2])) word[2] = 'Sorakime';
    // if (word[4][word[4].length - 1] === '„Åà' && word[5][0] !== '„ÅÜ') word[5] = '„Çã„ÅÆ„Åã';
    // if (word[3][word[3].length - 1] === '„Åß' && word[4][0] === 'Êù•') word[5] = 'ÁùÄ';
    // if (word[3][word[3].length - 1] === '„Åú') word[5] = '„Åå';
    // if (word[4][word[4].length - 1] === '„Çâ' && word[5][0] === '„Åü') word[5] = '„Çå„Åü';
    // if (word[4][word[4].length - 1] === '„Åà' && word[5][0] === '„ÅÜ') word[5] = '„Çã„ÇìÔºü';

    // let result = template
    //   .replace('1', word[0])  // ÂêçË©û
    //   .replace('2', word[1])  // Âä©Ë©û
    //   .replace('3', word[2])  // ÂêçË©û
    //   .replace('4', word[3])  // Âä©Ë©û
    //   .replace('5', word[4])  // ÂãïË©û
    //   .replace('6', word[5]); // Âä©ÂãïË©û

    let result = '';
    word.forEach((wordData) => {
      result += wordData.word;
    });

    if(result.match(/@\w+/g)) {
      result.replace(/@\w+/g, '@ rumiasan1218')
    }


    return result;
  }
}